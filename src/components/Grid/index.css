@import 'base/breakpoints.css';
:root {
  --grid-gap: var(--layout-gutter, 20px);
  --grid-gap-vertical: var(--layout-vertical-gap, var(--grid-gap));
  --grid-wide-gap: calc(var(--grid-gap) * 1.5);
  --grid-wide-gap-vertical: calc(var(--grid-gap-vertical) * 1.5);
  --grid-tight-gap: calc(var(--grid-gap) / 2);
  --grid-tight-gap-vertical: calc(var(--grid-gap-vertical) / 2);
}
.Grid {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: stretch;
}
.Grid--top {
  align-items: flex-start;
}
.Grid--center {
  align-items: center;
  justify-content: center;
}
.Grid--bottom {
  align-items: flex-end;
}
.Grid-cell {
  display: inline-block;
  display: flex;
  flex-direction: column;
  flex: 0 0 auto;
  width: 100%;
  box-sizing: border-box;
}
.Grid--wideGap,
.Grid--withGap {
  margin: calc(var(--grid-gap-vertical) / -2) calc(var(--grid-gap) / -2);
}
.Grid--wideGap > .Grid-cell,
.Grid--withGap > .Grid-cell {
  padding: calc(var(--grid-gap-vertical) / 2) calc(var(--grid-gap) / 2);
}

.Grid--tightGap {
  margin: calc(var(--grid-tight-gap-vertical) / -2)
    calc(var(--grid-tight-gap) / -2);
}
.Grid--tightGap > .Grid-cell {
  padding: calc(var(--grid-tight-gap-vertical) / 2)
    calc(var(--grid-tight-gap) / 2);
}

@media (--min-small) {
  .Grid--wideGap {
    margin: calc(var(--grid-wide-gap-vertical) / -2)
      calc(var(--grid-wide-gap) / -2);
  }
  .Grid--wideGap > .Grid-cell {
    padding: calc(var(--grid-wide-gap-vertical) / 2)
      calc(var(--grid-wide-gap) / 2);
  }
}
